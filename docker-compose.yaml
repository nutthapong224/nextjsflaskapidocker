version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
      - ./backups/postgresql:/backups
    networks:
      - app-network

  backend:
    build: ./backend
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/appdb
      FLASK_ENV: development
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - ./data/backend:/app/data
    networks:
      - app-network

  frontendnextjs:
    build: ./frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://backend:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - app-network

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare-tunnel
    restart: always
    command: tunnel --no-autoupdate run --token ${TUNNEL_TOKEN}
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    depends_on:
      - frontendnextjs
    networks:
      - app-network

networks:
  app-network:
    driver: bridge